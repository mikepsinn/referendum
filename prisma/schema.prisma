generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model UserApiLimit {
  id        String   @id @default(cuid())
  userId    String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSubscription {
  id                     String    @id @default(cuid())
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model Voter {
  id                   String    @id @default(cuid())
  name                 String?
  email                String?   @unique
  image                String?
  handle               String    @unique @default(uuid())
  address              String?
  city                 String?
  stateProvince        String?
  postalCode           String?
  signedPetition       Boolean   @default(false)
  language             String?
  warPercentageDesired Float?
  warPercentageGuessed Float?
  referrerId           String?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  deletedAt            DateTime?
  points               Int?
  badges               Json?
  countryCode          String?
  phoneNumber          String?
  newsletterSubscribed Boolean   @default(false)
  signatureTimestamp   DateTime  @default(now())
  ipAddress            String?   @db.VarChar(45)
  emailValidated       Boolean   @default(false)
  gdprConsent          Boolean   @default(false)
}
